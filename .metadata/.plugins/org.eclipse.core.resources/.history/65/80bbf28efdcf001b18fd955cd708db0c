package com.company.api;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import org.json.JSONException;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.http.HttpStatus;
import com.company.message.ResponseMessage;
import com.company.model.StockPrice;
import com.company.repository.StockPriceRepository;


@CrossOrigin(origins = "*", maxAge = 3600)
@Controller
@RequestMapping("/excel")
public class ExcelController {
	
	@Autowired
	StockPriceRepository repository;
	
	@RequestMapping(value="/getCompaniesByDate",method = RequestMethod.POST)
	public ResponseEntity<List<StockPrice>> getCompaniesByDate(@RequestBody String requiredDetails){
		System.out.println(requiredDetails);
		JSONObject jsonObj = new JSONObject(requiredDetails);
	    System.out.println(jsonObj.get("company"));    
	    
		return new ResponseEntity<>(repository.findAll(),HttpStatus.OK);
	}
	
	
	@RequestMapping(value = "/upload", method = RequestMethod.POST)
	public ResponseEntity<ResponseMessage> uploadFile(@RequestBody String array) {
		
		array = array.substring(1,array.length()-1);
		array = array.replace("[", "");
		String[] res = array.split("],");
		ArrayList<String> finalRes = new ArrayList<String>();
		for(String data : res) {
			if(!data.isEmpty())
				finalRes.add(data);
		}
		
		int length = finalRes.size();
		for(int i = 1; i < length; i++) {
			String[] temp = finalRes.get(i).split(",");
			temp[0] = temp[0].substring(1,temp[0].length()-1);
			temp[1] = temp[1].substring(1,temp[1].length()-1);
			temp[2] = temp[2].substring(1,temp[2].length()-1);
			temp[3] = temp[3].substring(1,temp[3].length()-1);
			temp[4] = temp[4].substring(1,temp[4].length()-1);
			String companyCode = temp[0].trim();
			String stockExchange = temp[1];
			String currentPrice = temp[2];
			LocalDate date = LocalDate.parse(temp[3]);
			String dateinStr = date.format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
			System.out.println(dateinStr);
			//DateTimeFormatter formatter = DateTimeFormatter.ofPattern("d/MM/yyyy");
			//LocalDate date = LocalDate.parse(temp[3],formatter);
			String time = temp[4].trim();
			StockPrice stockPrice = new StockPrice(companyCode,stockExchange,currentPrice,dateinStr,time);
			repository.save(stockPrice);
		}
		
		String message = "Done!";
		return ResponseEntity.status(HttpStatus.ACCEPTED).body(new ResponseMessage(message));
	}
	
	
	
}
