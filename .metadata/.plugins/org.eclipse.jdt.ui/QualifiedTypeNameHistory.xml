<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.company.feign.StockExchangeClient"/>
    <fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
    <fullyQualifiedTypeName name="com.company.feign.SectorClient"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.MongoRepository"/>
    <fullyQualifiedTypeName name="com.company.model.CompanyToCode"/>
    <fullyQualifiedTypeName name="com.company.repository.CompanyToCodeRepository"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.aggregation.VariableOperators.Map"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="com.authentication.repository.UserRepository"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="java.util.Iterator"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="com.sun.org.slf4j.internal.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="com.netflix.zuul.context.RequestContext"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="com.netflix.zuul.ZuulFilter"/>
    <fullyQualifiedTypeName name="com.zuul.filters.PreFilter"/>
    <fullyQualifiedTypeName name="com.zuul.filters.PostFilter"/>
    <fullyQualifiedTypeName name="com.zuul.filters.ErrorFilter"/>
    <fullyQualifiedTypeName name="com.zuul.filters.RouteFilter"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="org.springframework.boot.web.servlet.error.ErrorController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.company.repository.StockPriceRepository"/>
    <fullyQualifiedTypeName name="java.util.regex.Pattern"/>
    <fullyQualifiedTypeName name="java.time.LocalDate"/>
    <fullyQualifiedTypeName name="java.time.format.DateTimeFormatter"/>
    <fullyQualifiedTypeName name="org.json.JSONException"/>
    <fullyQualifiedTypeName name="org.json.JSONObject"/>
    <fullyQualifiedTypeName name="com.company.feign.CompanyClient"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.query.Query"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.query.Criteria"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.MongoOperations"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.web.context.WebApplicationContext"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.MockMvc"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.setup.MockMvcBuilders"/>
    <fullyQualifiedTypeName name="org.mockito.junit.jupiter.MockitoExtension"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.extension.ExtendWith"/>
    <fullyQualifiedTypeName name="org.mockito.Mock"/>
    <fullyQualifiedTypeName name="com.company.repository.CompanyRepository"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="com.company.model.Company"/>
    <fullyQualifiedTypeName name="org.hamcrest.MatcherAssert"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="com.company.repository.IPORepository"/>
    <fullyQualifiedTypeName name="com.company.model.IPO"/>
</qualifiedTypeNameHistroy>
